{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andrey\\\\Documents\\\\weather\\\\weather-app\\\\src\\\\App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport Form from \"./components/form\";\nimport Main from \"./components/main\"; // const API_KEY = \"5a2ee489ab444c36a71fb2616b400afb\";\n// let cityName = \"Minsk\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.getWeather = async e => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n\n      if (city) {\n        const api_call = await fetch(\"https://api.openweathermap.org/data/2.5/weather?q=?q=${city}&appid=5a2ee489ab444c36a71fb2616b400afb\");\n        const data = await api_call.json();\n        console.log(data);\n        this.setState({\n          city: data.name,\n          // country: data.sys.country,\n          temp: this.convertToCelsius(data.main.temp),\n          tempMin: this.convertToCelsius(data.main.temp_min),\n          tempMax: this.convertToCelsius(data.main.temp_max),\n          description: data.weather[0].description,\n          error: false\n        });\n      } else {\n        this.setState({\n          error: true\n        });\n      }\n    };\n\n    this.state = {\n      city: undefined,\n      // country: undefined,\n      // icon: undefined,\n      main: undefined,\n      convertToCelsius: undefined,\n      tempMax: null,\n      tempMin: null,\n      description: \"\",\n      error: false\n    }; // this.getWeather();\n  }\n\n  convertToCelsius(temp) {\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Form, {\n      loadWeather: this.getWeather,\n      error: this.state.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Main, {\n      city: this.state.city,\n      country: this.state.country,\n      temp: this.state.temp,\n      tempMin: this.state.tempMin,\n      tempMax: this.state.tempMax,\n      description: this.state.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/andrey/Documents/weather/weather-app/src/App.js"],"names":["React","Form","Main","App","Component","constructor","getWeather","e","preventDefault","city","target","elements","value","api_call","fetch","data","json","console","log","setState","name","temp","convertToCelsius","main","tempMin","temp_min","tempMax","temp_max","description","weather","error","state","undefined","cell","Math","floor","render","country"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA,OAAOC,IAAP,MAAiB,mBAAjB,C,CAEA;AAEA;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAqBdC,UArBc,GAqBD,MAAMC,CAAN,IAAW;AACtBA,MAAAA,CAAC,CAACC,cAAF;AAEA,YAAMC,IAAI,GAAGF,CAAC,CAACG,MAAF,CAASC,QAAT,CAAkBF,IAAlB,CAAuBG,KAApC;;AAEA,UAAIH,IAAJ,EAAU;AACR,cAAMI,QAAQ,GAAG,MAAMC,KAAK,CAC1B,qGAD0B,CAA5B;AAGA,cAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,aAAKI,QAAL,CAAc;AACZV,UAAAA,IAAI,EAAEM,IAAI,CAACK,IADC;AAEZ;AACAC,UAAAA,IAAI,EAAE,KAAKC,gBAAL,CAAsBP,IAAI,CAACQ,IAAL,CAAUF,IAAhC,CAHM;AAIZG,UAAAA,OAAO,EAAE,KAAKF,gBAAL,CAAsBP,IAAI,CAACQ,IAAL,CAAUE,QAAhC,CAJG;AAKZC,UAAAA,OAAO,EAAE,KAAKJ,gBAAL,CAAsBP,IAAI,CAACQ,IAAL,CAAUI,QAAhC,CALG;AAMZC,UAAAA,WAAW,EAAEb,IAAI,CAACc,OAAL,CAAa,CAAb,EAAgBD,WANjB;AAOZE,UAAAA,KAAK,EAAE;AAPK,SAAd;AASD,OAhBD,MAgBO;AACL,aAAKX,QAAL,CAAc;AACZW,UAAAA,KAAK,EAAE;AADK,SAAd;AAGD;AACF,KA/Ca;;AAEZ,SAAKC,KAAL,GAAa;AACXtB,MAAAA,IAAI,EAAEuB,SADK;AAEX;AACA;AACAT,MAAAA,IAAI,EAAES,SAJK;AAKXV,MAAAA,gBAAgB,EAAEU,SALP;AAMXN,MAAAA,OAAO,EAAE,IANE;AAOXF,MAAAA,OAAO,EAAE,IAPE;AAQXI,MAAAA,WAAW,EAAE,EARF;AASXE,MAAAA,KAAK,EAAE;AATI,KAAb,CAFY,CAaZ;AACD;;AAEDR,EAAAA,gBAAgB,CAACD,IAAD,EAAO;AACrB,QAAIY,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWd,IAAI,GAAG,MAAlB,CAAX;AACA,WAAOY,IAAP;AACD;;AA8BDG,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,WAAW,EAAE,KAAK9B,UAAxB;AAAoC,MAAA,KAAK,EAAE,KAAKyB,KAAL,CAAWD,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGE,oBAAC,IAAD;AACE,MAAA,IAAI,EAAE,KAAKC,KAAL,CAAWtB,IADnB;AAEE,MAAA,OAAO,EAAE,KAAKsB,KAAL,CAAWM,OAFtB;AAGE,MAAA,IAAI,EAAE,KAAKN,KAAL,CAAWV,IAHnB;AAIE,MAAA,OAAO,EAAE,KAAKU,KAAL,CAAWP,OAJtB;AAKE,MAAA,OAAO,EAAE,KAAKO,KAAL,CAAWL,OALtB;AAME,MAAA,WAAW,EAAE,KAAKK,KAAL,CAAWH,WAN1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAcD;;AAjE+B;;AAoElC,eAAezB,GAAf","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport Form from \"./components/form\";\n\nimport Main from \"./components/main\";\n\n// const API_KEY = \"5a2ee489ab444c36a71fb2616b400afb\";\n\n// let cityName = \"Minsk\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      city: undefined,\n      // country: undefined,\n      // icon: undefined,\n      main: undefined,\n      convertToCelsius: undefined,\n      tempMax: null,\n      tempMin: null,\n      description: \"\",\n      error: false\n    };\n    // this.getWeather();\n  }\n\n  convertToCelsius(temp) {\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  }\n\n  getWeather = async e => {\n    e.preventDefault();\n\n    const city = e.target.elements.city.value;\n\n    if (city) {\n      const api_call = await fetch(\n        \"https://api.openweathermap.org/data/2.5/weather?q=?q=${city}&appid=5a2ee489ab444c36a71fb2616b400afb\"\n      );\n      const data = await api_call.json();\n      console.log(data);\n\n      this.setState({\n        city: data.name,\n        // country: data.sys.country,\n        temp: this.convertToCelsius(data.main.temp),\n        tempMin: this.convertToCelsius(data.main.temp_min),\n        tempMax: this.convertToCelsius(data.main.temp_max),\n        description: data.weather[0].description,\n        error: false\n      });\n    } else {\n      this.setState({\n        error: true\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Form loadWeather={this.getWeather} error={this.state.error} />\n\n        <Main\n          city={this.state.city}\n          country={this.state.country}\n          temp={this.state.temp}\n          tempMin={this.state.tempMin}\n          tempMax={this.state.tempMax}\n          description={this.state.description}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}